package fi.csc.avaa.kotus.kielikartastot.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto;
import fi.csc.avaa.kotus.kielikartastot.db.model.AineistoModel;
import fi.csc.avaa.kotus.kielikartastot.db.model.AineistoSoap;

import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Aineisto service. Represents a row in the &quot;aineisto&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.kotus.kielikartastot.db.model.AineistoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AineistoImpl}.
 * </p>
 *
 * @author CSC
 * @see AineistoImpl
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.AineistoModel
 * @generated
 */
@JSON(strict = true)
public class AineistoModelImpl extends BaseModelImpl<Aineisto>
    implements AineistoModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a aineisto model instance should use the {@link fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto} interface instead.
     */
    public static final String TABLE_NAME = "aineisto";
    public static final Object[][] TABLE_COLUMNS = {
            { "aineisto_id", Types.INTEGER },
            { "nimi", Types.VARCHAR },
            { "tunnus", Types.VARCHAR },
            { "kuvaus", Types.VARCHAR },
            { "paikkatietosysteemi", Types.VARCHAR },
            { "infolinkki", Types.VARCHAR },
            { "kayttolupa", Types.VARCHAR },
            { "tuotu_kantaan", Types.TIMESTAMP },
            { "muutettu", Types.TIMESTAMP },
            { "muuttaja", Types.VARCHAR },
            { "poistettu", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table aineisto (aineisto_id INTEGER not null primary key,nimi VARCHAR(75) null,tunnus VARCHAR(75) null,kuvaus VARCHAR(75) null,paikkatietosysteemi VARCHAR(75) null,infolinkki VARCHAR(75) null,kayttolupa VARCHAR(75) null,tuotu_kantaan DATE null,muutettu DATE null,muuttaja VARCHAR(75) null,poistettu DATE null)";
    public static final String TABLE_SQL_DROP = "drop table aineisto";
    public static final String ORDER_BY_JPQL = " ORDER BY aineisto.aineisto_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY aineisto.aineisto_id ASC";
    public static final String DATA_SOURCE = "kotus_kielikartastot";
    public static final String SESSION_FACTORY = "kotus_kielikartastotSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto"));
    private static ClassLoader _classLoader = Aineisto.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Aineisto.class
        };
    private int _aineisto_id;
    private String _nimi;
    private String _tunnus;
    private String _kuvaus;
    private String _paikkatietosysteemi;
    private String _infolinkki;
    private String _kayttolupa;
    private Date _tuotu_kantaan;
    private Date _muutettu;
    private String _muuttaja;
    private Date _poistettu;
    private Aineisto _escapedModel;

    public AineistoModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Aineisto toModel(AineistoSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Aineisto model = new AineistoImpl();

        model.setAineisto_id(soapModel.getAineisto_id());
        model.setNimi(soapModel.getNimi());
        model.setTunnus(soapModel.getTunnus());
        model.setKuvaus(soapModel.getKuvaus());
        model.setPaikkatietosysteemi(soapModel.getPaikkatietosysteemi());
        model.setInfolinkki(soapModel.getInfolinkki());
        model.setKayttolupa(soapModel.getKayttolupa());
        model.setTuotu_kantaan(soapModel.getTuotu_kantaan());
        model.setMuutettu(soapModel.getMuutettu());
        model.setMuuttaja(soapModel.getMuuttaja());
        model.setPoistettu(soapModel.getPoistettu());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Aineisto> toModels(AineistoSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Aineisto> models = new ArrayList<Aineisto>(soapModels.length);

        for (AineistoSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _aineisto_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setAineisto_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _aineisto_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Aineisto.class;
    }

    @Override
    public String getModelClassName() {
        return Aineisto.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("aineisto_id", getAineisto_id());
        attributes.put("nimi", getNimi());
        attributes.put("tunnus", getTunnus());
        attributes.put("kuvaus", getKuvaus());
        attributes.put("paikkatietosysteemi", getPaikkatietosysteemi());
        attributes.put("infolinkki", getInfolinkki());
        attributes.put("kayttolupa", getKayttolupa());
        attributes.put("tuotu_kantaan", getTuotu_kantaan());
        attributes.put("muutettu", getMuutettu());
        attributes.put("muuttaja", getMuuttaja());
        attributes.put("poistettu", getPoistettu());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer aineisto_id = (Integer) attributes.get("aineisto_id");

        if (aineisto_id != null) {
            setAineisto_id(aineisto_id);
        }

        String nimi = (String) attributes.get("nimi");

        if (nimi != null) {
            setNimi(nimi);
        }

        String tunnus = (String) attributes.get("tunnus");

        if (tunnus != null) {
            setTunnus(tunnus);
        }

        String kuvaus = (String) attributes.get("kuvaus");

        if (kuvaus != null) {
            setKuvaus(kuvaus);
        }

        String paikkatietosysteemi = (String) attributes.get(
                "paikkatietosysteemi");

        if (paikkatietosysteemi != null) {
            setPaikkatietosysteemi(paikkatietosysteemi);
        }

        String infolinkki = (String) attributes.get("infolinkki");

        if (infolinkki != null) {
            setInfolinkki(infolinkki);
        }

        String kayttolupa = (String) attributes.get("kayttolupa");

        if (kayttolupa != null) {
            setKayttolupa(kayttolupa);
        }

        Date tuotu_kantaan = (Date) attributes.get("tuotu_kantaan");

        if (tuotu_kantaan != null) {
            setTuotu_kantaan(tuotu_kantaan);
        }

        Date muutettu = (Date) attributes.get("muutettu");

        if (muutettu != null) {
            setMuutettu(muutettu);
        }

        String muuttaja = (String) attributes.get("muuttaja");

        if (muuttaja != null) {
            setMuuttaja(muuttaja);
        }

        Date poistettu = (Date) attributes.get("poistettu");

        if (poistettu != null) {
            setPoistettu(poistettu);
        }
    }

    @JSON
    @Override
    public int getAineisto_id() {
        return _aineisto_id;
    }

    @Override
    public void setAineisto_id(int aineisto_id) {
        _aineisto_id = aineisto_id;
    }

    @JSON
    @Override
    public String getNimi() {
        if (_nimi == null) {
            return StringPool.BLANK;
        } else {
            return _nimi;
        }
    }

    @Override
    public void setNimi(String nimi) {
        _nimi = nimi;
    }

    @JSON
    @Override
    public String getTunnus() {
        if (_tunnus == null) {
            return StringPool.BLANK;
        } else {
            return _tunnus;
        }
    }

    @Override
    public void setTunnus(String tunnus) {
        _tunnus = tunnus;
    }

    @JSON
    @Override
    public String getKuvaus() {
        if (_kuvaus == null) {
            return StringPool.BLANK;
        } else {
            return _kuvaus;
        }
    }

    @Override
    public void setKuvaus(String kuvaus) {
        _kuvaus = kuvaus;
    }

    @JSON
    @Override
    public String getPaikkatietosysteemi() {
        if (_paikkatietosysteemi == null) {
            return StringPool.BLANK;
        } else {
            return _paikkatietosysteemi;
        }
    }

    @Override
    public void setPaikkatietosysteemi(String paikkatietosysteemi) {
        _paikkatietosysteemi = paikkatietosysteemi;
    }

    @JSON
    @Override
    public String getInfolinkki() {
        if (_infolinkki == null) {
            return StringPool.BLANK;
        } else {
            return _infolinkki;
        }
    }

    @Override
    public void setInfolinkki(String infolinkki) {
        _infolinkki = infolinkki;
    }

    @JSON
    @Override
    public String getKayttolupa() {
        if (_kayttolupa == null) {
            return StringPool.BLANK;
        } else {
            return _kayttolupa;
        }
    }

    @Override
    public void setKayttolupa(String kayttolupa) {
        _kayttolupa = kayttolupa;
    }

    @JSON
    @Override
    public Date getTuotu_kantaan() {
        return _tuotu_kantaan;
    }

    @Override
    public void setTuotu_kantaan(Date tuotu_kantaan) {
        _tuotu_kantaan = tuotu_kantaan;
    }

    @JSON
    @Override
    public Date getMuutettu() {
        return _muutettu;
    }

    @Override
    public void setMuutettu(Date muutettu) {
        _muutettu = muutettu;
    }

    @JSON
    @Override
    public String getMuuttaja() {
        if (_muuttaja == null) {
            return StringPool.BLANK;
        } else {
            return _muuttaja;
        }
    }

    @Override
    public void setMuuttaja(String muuttaja) {
        _muuttaja = muuttaja;
    }

    @JSON
    @Override
    public Date getPoistettu() {
        return _poistettu;
    }

    @Override
    public void setPoistettu(Date poistettu) {
        _poistettu = poistettu;
    }

    @Override
    public Aineisto toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Aineisto) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AineistoImpl aineistoImpl = new AineistoImpl();

        aineistoImpl.setAineisto_id(getAineisto_id());
        aineistoImpl.setNimi(getNimi());
        aineistoImpl.setTunnus(getTunnus());
        aineistoImpl.setKuvaus(getKuvaus());
        aineistoImpl.setPaikkatietosysteemi(getPaikkatietosysteemi());
        aineistoImpl.setInfolinkki(getInfolinkki());
        aineistoImpl.setKayttolupa(getKayttolupa());
        aineistoImpl.setTuotu_kantaan(getTuotu_kantaan());
        aineistoImpl.setMuutettu(getMuutettu());
        aineistoImpl.setMuuttaja(getMuuttaja());
        aineistoImpl.setPoistettu(getPoistettu());

        aineistoImpl.resetOriginalValues();

        return aineistoImpl;
    }

    @Override
    public int compareTo(Aineisto aineisto) {
        int primaryKey = aineisto.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Aineisto)) {
            return false;
        }

        Aineisto aineisto = (Aineisto) obj;

        int primaryKey = aineisto.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Aineisto> toCacheModel() {
        AineistoCacheModel aineistoCacheModel = new AineistoCacheModel();

        aineistoCacheModel.aineisto_id = getAineisto_id();

        aineistoCacheModel.nimi = getNimi();

        String nimi = aineistoCacheModel.nimi;

        if ((nimi != null) && (nimi.length() == 0)) {
            aineistoCacheModel.nimi = null;
        }

        aineistoCacheModel.tunnus = getTunnus();

        String tunnus = aineistoCacheModel.tunnus;

        if ((tunnus != null) && (tunnus.length() == 0)) {
            aineistoCacheModel.tunnus = null;
        }

        aineistoCacheModel.kuvaus = getKuvaus();

        String kuvaus = aineistoCacheModel.kuvaus;

        if ((kuvaus != null) && (kuvaus.length() == 0)) {
            aineistoCacheModel.kuvaus = null;
        }

        aineistoCacheModel.paikkatietosysteemi = getPaikkatietosysteemi();

        String paikkatietosysteemi = aineistoCacheModel.paikkatietosysteemi;

        if ((paikkatietosysteemi != null) &&
                (paikkatietosysteemi.length() == 0)) {
            aineistoCacheModel.paikkatietosysteemi = null;
        }

        aineistoCacheModel.infolinkki = getInfolinkki();

        String infolinkki = aineistoCacheModel.infolinkki;

        if ((infolinkki != null) && (infolinkki.length() == 0)) {
            aineistoCacheModel.infolinkki = null;
        }

        aineistoCacheModel.kayttolupa = getKayttolupa();

        String kayttolupa = aineistoCacheModel.kayttolupa;

        if ((kayttolupa != null) && (kayttolupa.length() == 0)) {
            aineistoCacheModel.kayttolupa = null;
        }

        Date tuotu_kantaan = getTuotu_kantaan();

        if (tuotu_kantaan != null) {
            aineistoCacheModel.tuotu_kantaan = tuotu_kantaan.getTime();
        } else {
            aineistoCacheModel.tuotu_kantaan = Long.MIN_VALUE;
        }

        Date muutettu = getMuutettu();

        if (muutettu != null) {
            aineistoCacheModel.muutettu = muutettu.getTime();
        } else {
            aineistoCacheModel.muutettu = Long.MIN_VALUE;
        }

        aineistoCacheModel.muuttaja = getMuuttaja();

        String muuttaja = aineistoCacheModel.muuttaja;

        if ((muuttaja != null) && (muuttaja.length() == 0)) {
            aineistoCacheModel.muuttaja = null;
        }

        Date poistettu = getPoistettu();

        if (poistettu != null) {
            aineistoCacheModel.poistettu = poistettu.getTime();
        } else {
            aineistoCacheModel.poistettu = Long.MIN_VALUE;
        }

        return aineistoCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(23);

        sb.append("{aineisto_id=");
        sb.append(getAineisto_id());
        sb.append(", nimi=");
        sb.append(getNimi());
        sb.append(", tunnus=");
        sb.append(getTunnus());
        sb.append(", kuvaus=");
        sb.append(getKuvaus());
        sb.append(", paikkatietosysteemi=");
        sb.append(getPaikkatietosysteemi());
        sb.append(", infolinkki=");
        sb.append(getInfolinkki());
        sb.append(", kayttolupa=");
        sb.append(getKayttolupa());
        sb.append(", tuotu_kantaan=");
        sb.append(getTuotu_kantaan());
        sb.append(", muutettu=");
        sb.append(getMuutettu());
        sb.append(", muuttaja=");
        sb.append(getMuuttaja());
        sb.append(", poistettu=");
        sb.append(getPoistettu());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(37);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.kotus.kielikartastot.db.model.Aineisto");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>aineisto_id</column-name><column-value><![CDATA[");
        sb.append(getAineisto_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nimi</column-name><column-value><![CDATA[");
        sb.append(getNimi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tunnus</column-name><column-value><![CDATA[");
        sb.append(getTunnus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuvaus</column-name><column-value><![CDATA[");
        sb.append(getKuvaus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>paikkatietosysteemi</column-name><column-value><![CDATA[");
        sb.append(getPaikkatietosysteemi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>infolinkki</column-name><column-value><![CDATA[");
        sb.append(getInfolinkki());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kayttolupa</column-name><column-value><![CDATA[");
        sb.append(getKayttolupa());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tuotu_kantaan</column-name><column-value><![CDATA[");
        sb.append(getTuotu_kantaan());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muutettu</column-name><column-value><![CDATA[");
        sb.append(getMuutettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muuttaja</column-name><column-value><![CDATA[");
        sb.append(getMuuttaja());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>poistettu</column-name><column-value><![CDATA[");
        sb.append(getPoistettu());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
