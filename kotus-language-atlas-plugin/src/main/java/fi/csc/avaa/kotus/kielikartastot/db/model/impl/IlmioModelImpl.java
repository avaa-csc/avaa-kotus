package fi.csc.avaa.kotus.kielikartastot.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio;
import fi.csc.avaa.kotus.kielikartastot.db.model.IlmioModel;
import fi.csc.avaa.kotus.kielikartastot.db.model.IlmioSoap;

import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Ilmio service. Represents a row in the &quot;ilmio&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.kotus.kielikartastot.db.model.IlmioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IlmioImpl}.
 * </p>
 *
 * @author CSC
 * @see IlmioImpl
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.IlmioModel
 * @generated
 */
@JSON(strict = true)
public class IlmioModelImpl extends BaseModelImpl<Ilmio> implements IlmioModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a ilmio model instance should use the {@link fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio} interface instead.
     */
    public static final String TABLE_NAME = "ilmio";
    public static final Object[][] TABLE_COLUMNS = {
            { "ilmio_id", Types.INTEGER },
            { "aineisto_id", Types.INTEGER },
            { "ryhma_id", Types.INTEGER },
            { "lajikoodi_id", Types.INTEGER },
            { "ilmio", Types.VARCHAR },
            { "tyyppi", Types.VARCHAR },
            { "kieli_ISO639_3", Types.VARCHAR },
            { "murre", Types.VARCHAR },
            { "havaintoaika", Types.VARCHAR },
            { "kuvaus", Types.VARCHAR },
            { "lisatieto", Types.VARCHAR },
            { "tuotu_kantaan", Types.TIMESTAMP },
            { "muutettu", Types.TIMESTAMP },
            { "muuttaja", Types.VARCHAR },
            { "poistettu", Types.TIMESTAMP },
            { "tunnus", Types.VARCHAR },
            { "ryhma_tunnus", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table ilmio (ilmio_id INTEGER not null primary key,aineisto_id INTEGER,ryhma_id INTEGER,lajikoodi_id INTEGER,ilmio VARCHAR(75) null,tyyppi VARCHAR(75) null,kieli_ISO639_3 VARCHAR(75) null,murre VARCHAR(75) null,havaintoaika VARCHAR(75) null,kuvaus VARCHAR(75) null,lisatieto VARCHAR(75) null,tuotu_kantaan DATE null,muutettu DATE null,muuttaja VARCHAR(75) null,poistettu DATE null,tunnus VARCHAR(75) null,ryhma_tunnus VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table ilmio";
    public static final String ORDER_BY_JPQL = " ORDER BY ilmio.ilmio_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY ilmio.ilmio_id ASC";
    public static final String DATA_SOURCE = "kotus_kielikartastot";
    public static final String SESSION_FACTORY = "kotus_kielikartastotSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio"));
    private static ClassLoader _classLoader = Ilmio.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Ilmio.class };
    private int _ilmio_id;
    private int _aineisto_id;
    private int _ryhma_id;
    private int _lajikoodi_id;
    private String _ilmio;
    private String _tyyppi;
    private String _kieli_ISO639_3;
    private String _murre;
    private String _havaintoaika;
    private String _kuvaus;
    private String _lisatieto;
    private Date _tuotu_kantaan;
    private Date _muutettu;
    private String _muuttaja;
    private Date _poistettu;
    private String _tunnus;
    private String _ryhma_tunnus;
    private Ilmio _escapedModel;

    public IlmioModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Ilmio toModel(IlmioSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Ilmio model = new IlmioImpl();

        model.setIlmio_id(soapModel.getIlmio_id());
        model.setAineisto_id(soapModel.getAineisto_id());
        model.setRyhma_id(soapModel.getRyhma_id());
        model.setLajikoodi_id(soapModel.getLajikoodi_id());
        model.setIlmio(soapModel.getIlmio());
        model.setTyyppi(soapModel.getTyyppi());
        model.setKieli_ISO639_3(soapModel.getKieli_ISO639_3());
        model.setMurre(soapModel.getMurre());
        model.setHavaintoaika(soapModel.getHavaintoaika());
        model.setKuvaus(soapModel.getKuvaus());
        model.setLisatieto(soapModel.getLisatieto());
        model.setTuotu_kantaan(soapModel.getTuotu_kantaan());
        model.setMuutettu(soapModel.getMuutettu());
        model.setMuuttaja(soapModel.getMuuttaja());
        model.setPoistettu(soapModel.getPoistettu());
        model.setTunnus(soapModel.getTunnus());
        model.setRyhma_tunnus(soapModel.getRyhma_tunnus());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Ilmio> toModels(IlmioSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Ilmio> models = new ArrayList<Ilmio>(soapModels.length);

        for (IlmioSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _ilmio_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setIlmio_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _ilmio_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Ilmio.class;
    }

    @Override
    public String getModelClassName() {
        return Ilmio.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("ilmio_id", getIlmio_id());
        attributes.put("aineisto_id", getAineisto_id());
        attributes.put("ryhma_id", getRyhma_id());
        attributes.put("lajikoodi_id", getLajikoodi_id());
        attributes.put("ilmio", getIlmio());
        attributes.put("tyyppi", getTyyppi());
        attributes.put("kieli_ISO639_3", getKieli_ISO639_3());
        attributes.put("murre", getMurre());
        attributes.put("havaintoaika", getHavaintoaika());
        attributes.put("kuvaus", getKuvaus());
        attributes.put("lisatieto", getLisatieto());
        attributes.put("tuotu_kantaan", getTuotu_kantaan());
        attributes.put("muutettu", getMuutettu());
        attributes.put("muuttaja", getMuuttaja());
        attributes.put("poistettu", getPoistettu());
        attributes.put("tunnus", getTunnus());
        attributes.put("ryhma_tunnus", getRyhma_tunnus());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer ilmio_id = (Integer) attributes.get("ilmio_id");

        if (ilmio_id != null) {
            setIlmio_id(ilmio_id);
        }

        Integer aineisto_id = (Integer) attributes.get("aineisto_id");

        if (aineisto_id != null) {
            setAineisto_id(aineisto_id);
        }

        Integer ryhma_id = (Integer) attributes.get("ryhma_id");

        if (ryhma_id != null) {
            setRyhma_id(ryhma_id);
        }

        Integer lajikoodi_id = (Integer) attributes.get("lajikoodi_id");

        if (lajikoodi_id != null) {
            setLajikoodi_id(lajikoodi_id);
        }

        String ilmio = (String) attributes.get("ilmio");

        if (ilmio != null) {
            setIlmio(ilmio);
        }

        String tyyppi = (String) attributes.get("tyyppi");

        if (tyyppi != null) {
            setTyyppi(tyyppi);
        }

        String kieli_ISO639_3 = (String) attributes.get("kieli_ISO639_3");

        if (kieli_ISO639_3 != null) {
            setKieli_ISO639_3(kieli_ISO639_3);
        }

        String murre = (String) attributes.get("murre");

        if (murre != null) {
            setMurre(murre);
        }

        String havaintoaika = (String) attributes.get("havaintoaika");

        if (havaintoaika != null) {
            setHavaintoaika(havaintoaika);
        }

        String kuvaus = (String) attributes.get("kuvaus");

        if (kuvaus != null) {
            setKuvaus(kuvaus);
        }

        String lisatieto = (String) attributes.get("lisatieto");

        if (lisatieto != null) {
            setLisatieto(lisatieto);
        }

        Date tuotu_kantaan = (Date) attributes.get("tuotu_kantaan");

        if (tuotu_kantaan != null) {
            setTuotu_kantaan(tuotu_kantaan);
        }

        Date muutettu = (Date) attributes.get("muutettu");

        if (muutettu != null) {
            setMuutettu(muutettu);
        }

        String muuttaja = (String) attributes.get("muuttaja");

        if (muuttaja != null) {
            setMuuttaja(muuttaja);
        }

        Date poistettu = (Date) attributes.get("poistettu");

        if (poistettu != null) {
            setPoistettu(poistettu);
        }

        String tunnus = (String) attributes.get("tunnus");

        if (tunnus != null) {
            setTunnus(tunnus);
        }

        String ryhma_tunnus = (String) attributes.get("ryhma_tunnus");

        if (ryhma_tunnus != null) {
            setRyhma_tunnus(ryhma_tunnus);
        }
    }

    @JSON
    @Override
    public int getIlmio_id() {
        return _ilmio_id;
    }

    @Override
    public void setIlmio_id(int ilmio_id) {
        _ilmio_id = ilmio_id;
    }

    @JSON
    @Override
    public int getAineisto_id() {
        return _aineisto_id;
    }

    @Override
    public void setAineisto_id(int aineisto_id) {
        _aineisto_id = aineisto_id;
    }

    @JSON
    @Override
    public int getRyhma_id() {
        return _ryhma_id;
    }

    @Override
    public void setRyhma_id(int ryhma_id) {
        _ryhma_id = ryhma_id;
    }

    @JSON
    @Override
    public int getLajikoodi_id() {
        return _lajikoodi_id;
    }

    @Override
    public void setLajikoodi_id(int lajikoodi_id) {
        _lajikoodi_id = lajikoodi_id;
    }

    @JSON
    @Override
    public String getIlmio() {
        if (_ilmio == null) {
            return StringPool.BLANK;
        } else {
            return _ilmio;
        }
    }

    @Override
    public void setIlmio(String ilmio) {
        _ilmio = ilmio;
    }

    @JSON
    @Override
    public String getTyyppi() {
        if (_tyyppi == null) {
            return StringPool.BLANK;
        } else {
            return _tyyppi;
        }
    }

    @Override
    public void setTyyppi(String tyyppi) {
        _tyyppi = tyyppi;
    }

    @JSON
    @Override
    public String getKieli_ISO639_3() {
        if (_kieli_ISO639_3 == null) {
            return StringPool.BLANK;
        } else {
            return _kieli_ISO639_3;
        }
    }

    @Override
    public void setKieli_ISO639_3(String kieli_ISO639_3) {
        _kieli_ISO639_3 = kieli_ISO639_3;
    }

    @JSON
    @Override
    public String getMurre() {
        if (_murre == null) {
            return StringPool.BLANK;
        } else {
            return _murre;
        }
    }

    @Override
    public void setMurre(String murre) {
        _murre = murre;
    }

    @JSON
    @Override
    public String getHavaintoaika() {
        if (_havaintoaika == null) {
            return StringPool.BLANK;
        } else {
            return _havaintoaika;
        }
    }

    @Override
    public void setHavaintoaika(String havaintoaika) {
        _havaintoaika = havaintoaika;
    }

    @JSON
    @Override
    public String getKuvaus() {
        if (_kuvaus == null) {
            return StringPool.BLANK;
        } else {
            return _kuvaus;
        }
    }

    @Override
    public void setKuvaus(String kuvaus) {
        _kuvaus = kuvaus;
    }

    @JSON
    @Override
    public String getLisatieto() {
        if (_lisatieto == null) {
            return StringPool.BLANK;
        } else {
            return _lisatieto;
        }
    }

    @Override
    public void setLisatieto(String lisatieto) {
        _lisatieto = lisatieto;
    }

    @JSON
    @Override
    public Date getTuotu_kantaan() {
        return _tuotu_kantaan;
    }

    @Override
    public void setTuotu_kantaan(Date tuotu_kantaan) {
        _tuotu_kantaan = tuotu_kantaan;
    }

    @JSON
    @Override
    public Date getMuutettu() {
        return _muutettu;
    }

    @Override
    public void setMuutettu(Date muutettu) {
        _muutettu = muutettu;
    }

    @JSON
    @Override
    public String getMuuttaja() {
        if (_muuttaja == null) {
            return StringPool.BLANK;
        } else {
            return _muuttaja;
        }
    }

    @Override
    public void setMuuttaja(String muuttaja) {
        _muuttaja = muuttaja;
    }

    @JSON
    @Override
    public Date getPoistettu() {
        return _poistettu;
    }

    @Override
    public void setPoistettu(Date poistettu) {
        _poistettu = poistettu;
    }

    @JSON
    @Override
    public String getTunnus() {
        if (_tunnus == null) {
            return StringPool.BLANK;
        } else {
            return _tunnus;
        }
    }

    @Override
    public void setTunnus(String tunnus) {
        _tunnus = tunnus;
    }

    @JSON
    @Override
    public String getRyhma_tunnus() {
        if (_ryhma_tunnus == null) {
            return StringPool.BLANK;
        } else {
            return _ryhma_tunnus;
        }
    }

    @Override
    public void setRyhma_tunnus(String ryhma_tunnus) {
        _ryhma_tunnus = ryhma_tunnus;
    }

    @Override
    public Ilmio toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Ilmio) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        IlmioImpl ilmioImpl = new IlmioImpl();

        ilmioImpl.setIlmio_id(getIlmio_id());
        ilmioImpl.setAineisto_id(getAineisto_id());
        ilmioImpl.setRyhma_id(getRyhma_id());
        ilmioImpl.setLajikoodi_id(getLajikoodi_id());
        ilmioImpl.setIlmio(getIlmio());
        ilmioImpl.setTyyppi(getTyyppi());
        ilmioImpl.setKieli_ISO639_3(getKieli_ISO639_3());
        ilmioImpl.setMurre(getMurre());
        ilmioImpl.setHavaintoaika(getHavaintoaika());
        ilmioImpl.setKuvaus(getKuvaus());
        ilmioImpl.setLisatieto(getLisatieto());
        ilmioImpl.setTuotu_kantaan(getTuotu_kantaan());
        ilmioImpl.setMuutettu(getMuutettu());
        ilmioImpl.setMuuttaja(getMuuttaja());
        ilmioImpl.setPoistettu(getPoistettu());
        ilmioImpl.setTunnus(getTunnus());
        ilmioImpl.setRyhma_tunnus(getRyhma_tunnus());

        ilmioImpl.resetOriginalValues();

        return ilmioImpl;
    }

    @Override
    public int compareTo(Ilmio ilmio) {
        int primaryKey = ilmio.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Ilmio)) {
            return false;
        }

        Ilmio ilmio = (Ilmio) obj;

        int primaryKey = ilmio.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Ilmio> toCacheModel() {
        IlmioCacheModel ilmioCacheModel = new IlmioCacheModel();

        ilmioCacheModel.ilmio_id = getIlmio_id();

        ilmioCacheModel.aineisto_id = getAineisto_id();

        ilmioCacheModel.ryhma_id = getRyhma_id();

        ilmioCacheModel.lajikoodi_id = getLajikoodi_id();

        ilmioCacheModel.ilmio = getIlmio();

        String ilmio = ilmioCacheModel.ilmio;

        if ((ilmio != null) && (ilmio.length() == 0)) {
            ilmioCacheModel.ilmio = null;
        }

        ilmioCacheModel.tyyppi = getTyyppi();

        String tyyppi = ilmioCacheModel.tyyppi;

        if ((tyyppi != null) && (tyyppi.length() == 0)) {
            ilmioCacheModel.tyyppi = null;
        }

        ilmioCacheModel.kieli_ISO639_3 = getKieli_ISO639_3();

        String kieli_ISO639_3 = ilmioCacheModel.kieli_ISO639_3;

        if ((kieli_ISO639_3 != null) && (kieli_ISO639_3.length() == 0)) {
            ilmioCacheModel.kieli_ISO639_3 = null;
        }

        ilmioCacheModel.murre = getMurre();

        String murre = ilmioCacheModel.murre;

        if ((murre != null) && (murre.length() == 0)) {
            ilmioCacheModel.murre = null;
        }

        ilmioCacheModel.havaintoaika = getHavaintoaika();

        String havaintoaika = ilmioCacheModel.havaintoaika;

        if ((havaintoaika != null) && (havaintoaika.length() == 0)) {
            ilmioCacheModel.havaintoaika = null;
        }

        ilmioCacheModel.kuvaus = getKuvaus();

        String kuvaus = ilmioCacheModel.kuvaus;

        if ((kuvaus != null) && (kuvaus.length() == 0)) {
            ilmioCacheModel.kuvaus = null;
        }

        ilmioCacheModel.lisatieto = getLisatieto();

        String lisatieto = ilmioCacheModel.lisatieto;

        if ((lisatieto != null) && (lisatieto.length() == 0)) {
            ilmioCacheModel.lisatieto = null;
        }

        Date tuotu_kantaan = getTuotu_kantaan();

        if (tuotu_kantaan != null) {
            ilmioCacheModel.tuotu_kantaan = tuotu_kantaan.getTime();
        } else {
            ilmioCacheModel.tuotu_kantaan = Long.MIN_VALUE;
        }

        Date muutettu = getMuutettu();

        if (muutettu != null) {
            ilmioCacheModel.muutettu = muutettu.getTime();
        } else {
            ilmioCacheModel.muutettu = Long.MIN_VALUE;
        }

        ilmioCacheModel.muuttaja = getMuuttaja();

        String muuttaja = ilmioCacheModel.muuttaja;

        if ((muuttaja != null) && (muuttaja.length() == 0)) {
            ilmioCacheModel.muuttaja = null;
        }

        Date poistettu = getPoistettu();

        if (poistettu != null) {
            ilmioCacheModel.poistettu = poistettu.getTime();
        } else {
            ilmioCacheModel.poistettu = Long.MIN_VALUE;
        }

        ilmioCacheModel.tunnus = getTunnus();

        String tunnus = ilmioCacheModel.tunnus;

        if ((tunnus != null) && (tunnus.length() == 0)) {
            ilmioCacheModel.tunnus = null;
        }

        ilmioCacheModel.ryhma_tunnus = getRyhma_tunnus();

        String ryhma_tunnus = ilmioCacheModel.ryhma_tunnus;

        if ((ryhma_tunnus != null) && (ryhma_tunnus.length() == 0)) {
            ilmioCacheModel.ryhma_tunnus = null;
        }

        return ilmioCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(35);

        sb.append("{ilmio_id=");
        sb.append(getIlmio_id());
        sb.append(", aineisto_id=");
        sb.append(getAineisto_id());
        sb.append(", ryhma_id=");
        sb.append(getRyhma_id());
        sb.append(", lajikoodi_id=");
        sb.append(getLajikoodi_id());
        sb.append(", ilmio=");
        sb.append(getIlmio());
        sb.append(", tyyppi=");
        sb.append(getTyyppi());
        sb.append(", kieli_ISO639_3=");
        sb.append(getKieli_ISO639_3());
        sb.append(", murre=");
        sb.append(getMurre());
        sb.append(", havaintoaika=");
        sb.append(getHavaintoaika());
        sb.append(", kuvaus=");
        sb.append(getKuvaus());
        sb.append(", lisatieto=");
        sb.append(getLisatieto());
        sb.append(", tuotu_kantaan=");
        sb.append(getTuotu_kantaan());
        sb.append(", muutettu=");
        sb.append(getMuutettu());
        sb.append(", muuttaja=");
        sb.append(getMuuttaja());
        sb.append(", poistettu=");
        sb.append(getPoistettu());
        sb.append(", tunnus=");
        sb.append(getTunnus());
        sb.append(", ryhma_tunnus=");
        sb.append(getRyhma_tunnus());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(55);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.kotus.kielikartastot.db.model.Ilmio");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>ilmio_id</column-name><column-value><![CDATA[");
        sb.append(getIlmio_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>aineisto_id</column-name><column-value><![CDATA[");
        sb.append(getAineisto_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ryhma_id</column-name><column-value><![CDATA[");
        sb.append(getRyhma_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lajikoodi_id</column-name><column-value><![CDATA[");
        sb.append(getLajikoodi_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ilmio</column-name><column-value><![CDATA[");
        sb.append(getIlmio());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tyyppi</column-name><column-value><![CDATA[");
        sb.append(getTyyppi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kieli_ISO639_3</column-name><column-value><![CDATA[");
        sb.append(getKieli_ISO639_3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>murre</column-name><column-value><![CDATA[");
        sb.append(getMurre());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>havaintoaika</column-name><column-value><![CDATA[");
        sb.append(getHavaintoaika());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kuvaus</column-name><column-value><![CDATA[");
        sb.append(getKuvaus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lisatieto</column-name><column-value><![CDATA[");
        sb.append(getLisatieto());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tuotu_kantaan</column-name><column-value><![CDATA[");
        sb.append(getTuotu_kantaan());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muutettu</column-name><column-value><![CDATA[");
        sb.append(getMuutettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muuttaja</column-name><column-value><![CDATA[");
        sb.append(getMuuttaja());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>poistettu</column-name><column-value><![CDATA[");
        sb.append(getPoistettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tunnus</column-name><column-value><![CDATA[");
        sb.append(getTunnus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ryhma_tunnus</column-name><column-value><![CDATA[");
        sb.append(getRyhma_tunnus());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
