package fi.csc.avaa.kotus.kielikartastot.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi;
import fi.csc.avaa.kotus.kielikartastot.db.model.LajikoodiModel;
import fi.csc.avaa.kotus.kielikartastot.db.model.LajikoodiSoap;

import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Lajikoodi service. Represents a row in the &quot;lajikoodi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.kotus.kielikartastot.db.model.LajikoodiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LajikoodiImpl}.
 * </p>
 *
 * @author CSC
 * @see LajikoodiImpl
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.LajikoodiModel
 * @generated
 */
@JSON(strict = true)
public class LajikoodiModelImpl extends BaseModelImpl<Lajikoodi>
    implements LajikoodiModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a lajikoodi model instance should use the {@link fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi} interface instead.
     */
    public static final String TABLE_NAME = "lajikoodi";
    public static final Object[][] TABLE_COLUMNS = {
            { "lajikoodi_id", Types.INTEGER },
            { "lajikoodi", Types.INTEGER },
            { "laji", Types.VARCHAR },
            { "aineistot", Types.VARCHAR },
            { "viite", Types.VARCHAR },
            { "tuotu_kantaan", Types.TIMESTAMP },
            { "muutettu", Types.TIMESTAMP },
            { "muuttaja", Types.VARCHAR },
            { "poistettu", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table lajikoodi (lajikoodi_id INTEGER not null primary key,lajikoodi INTEGER,laji VARCHAR(75) null,aineistot VARCHAR(75) null,viite VARCHAR(75) null,tuotu_kantaan DATE null,muutettu DATE null,muuttaja VARCHAR(75) null,poistettu DATE null)";
    public static final String TABLE_SQL_DROP = "drop table lajikoodi";
    public static final String ORDER_BY_JPQL = " ORDER BY lajikoodi.lajikoodi_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY lajikoodi.lajikoodi_id ASC";
    public static final String DATA_SOURCE = "kotus_kielikartastot";
    public static final String SESSION_FACTORY = "kotus_kielikartastotSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi"));
    private static ClassLoader _classLoader = Lajikoodi.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Lajikoodi.class
        };
    private int _lajikoodi_id;
    private int _lajikoodi;
    private String _laji;
    private String _aineistot;
    private String _viite;
    private Date _tuotu_kantaan;
    private Date _muutettu;
    private String _muuttaja;
    private Date _poistettu;
    private Lajikoodi _escapedModel;

    public LajikoodiModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Lajikoodi toModel(LajikoodiSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Lajikoodi model = new LajikoodiImpl();

        model.setLajikoodi_id(soapModel.getLajikoodi_id());
        model.setLajikoodi(soapModel.getLajikoodi());
        model.setLaji(soapModel.getLaji());
        model.setAineistot(soapModel.getAineistot());
        model.setViite(soapModel.getViite());
        model.setTuotu_kantaan(soapModel.getTuotu_kantaan());
        model.setMuutettu(soapModel.getMuutettu());
        model.setMuuttaja(soapModel.getMuuttaja());
        model.setPoistettu(soapModel.getPoistettu());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Lajikoodi> toModels(LajikoodiSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Lajikoodi> models = new ArrayList<Lajikoodi>(soapModels.length);

        for (LajikoodiSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _lajikoodi_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setLajikoodi_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _lajikoodi_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Lajikoodi.class;
    }

    @Override
    public String getModelClassName() {
        return Lajikoodi.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("lajikoodi_id", getLajikoodi_id());
        attributes.put("lajikoodi", getLajikoodi());
        attributes.put("laji", getLaji());
        attributes.put("aineistot", getAineistot());
        attributes.put("viite", getViite());
        attributes.put("tuotu_kantaan", getTuotu_kantaan());
        attributes.put("muutettu", getMuutettu());
        attributes.put("muuttaja", getMuuttaja());
        attributes.put("poistettu", getPoistettu());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer lajikoodi_id = (Integer) attributes.get("lajikoodi_id");

        if (lajikoodi_id != null) {
            setLajikoodi_id(lajikoodi_id);
        }

        Integer lajikoodi = (Integer) attributes.get("lajikoodi");

        if (lajikoodi != null) {
            setLajikoodi(lajikoodi);
        }

        String laji = (String) attributes.get("laji");

        if (laji != null) {
            setLaji(laji);
        }

        String aineistot = (String) attributes.get("aineistot");

        if (aineistot != null) {
            setAineistot(aineistot);
        }

        String viite = (String) attributes.get("viite");

        if (viite != null) {
            setViite(viite);
        }

        Date tuotu_kantaan = (Date) attributes.get("tuotu_kantaan");

        if (tuotu_kantaan != null) {
            setTuotu_kantaan(tuotu_kantaan);
        }

        Date muutettu = (Date) attributes.get("muutettu");

        if (muutettu != null) {
            setMuutettu(muutettu);
        }

        String muuttaja = (String) attributes.get("muuttaja");

        if (muuttaja != null) {
            setMuuttaja(muuttaja);
        }

        Date poistettu = (Date) attributes.get("poistettu");

        if (poistettu != null) {
            setPoistettu(poistettu);
        }
    }

    @JSON
    @Override
    public int getLajikoodi_id() {
        return _lajikoodi_id;
    }

    @Override
    public void setLajikoodi_id(int lajikoodi_id) {
        _lajikoodi_id = lajikoodi_id;
    }

    @JSON
    @Override
    public int getLajikoodi() {
        return _lajikoodi;
    }

    @Override
    public void setLajikoodi(int lajikoodi) {
        _lajikoodi = lajikoodi;
    }

    @JSON
    @Override
    public String getLaji() {
        if (_laji == null) {
            return StringPool.BLANK;
        } else {
            return _laji;
        }
    }

    @Override
    public void setLaji(String laji) {
        _laji = laji;
    }

    @JSON
    @Override
    public String getAineistot() {
        if (_aineistot == null) {
            return StringPool.BLANK;
        } else {
            return _aineistot;
        }
    }

    @Override
    public void setAineistot(String aineistot) {
        _aineistot = aineistot;
    }

    @JSON
    @Override
    public String getViite() {
        if (_viite == null) {
            return StringPool.BLANK;
        } else {
            return _viite;
        }
    }

    @Override
    public void setViite(String viite) {
        _viite = viite;
    }

    @JSON
    @Override
    public Date getTuotu_kantaan() {
        return _tuotu_kantaan;
    }

    @Override
    public void setTuotu_kantaan(Date tuotu_kantaan) {
        _tuotu_kantaan = tuotu_kantaan;
    }

    @JSON
    @Override
    public Date getMuutettu() {
        return _muutettu;
    }

    @Override
    public void setMuutettu(Date muutettu) {
        _muutettu = muutettu;
    }

    @JSON
    @Override
    public String getMuuttaja() {
        if (_muuttaja == null) {
            return StringPool.BLANK;
        } else {
            return _muuttaja;
        }
    }

    @Override
    public void setMuuttaja(String muuttaja) {
        _muuttaja = muuttaja;
    }

    @JSON
    @Override
    public Date getPoistettu() {
        return _poistettu;
    }

    @Override
    public void setPoistettu(Date poistettu) {
        _poistettu = poistettu;
    }

    @Override
    public Lajikoodi toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Lajikoodi) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        LajikoodiImpl lajikoodiImpl = new LajikoodiImpl();

        lajikoodiImpl.setLajikoodi_id(getLajikoodi_id());
        lajikoodiImpl.setLajikoodi(getLajikoodi());
        lajikoodiImpl.setLaji(getLaji());
        lajikoodiImpl.setAineistot(getAineistot());
        lajikoodiImpl.setViite(getViite());
        lajikoodiImpl.setTuotu_kantaan(getTuotu_kantaan());
        lajikoodiImpl.setMuutettu(getMuutettu());
        lajikoodiImpl.setMuuttaja(getMuuttaja());
        lajikoodiImpl.setPoistettu(getPoistettu());

        lajikoodiImpl.resetOriginalValues();

        return lajikoodiImpl;
    }

    @Override
    public int compareTo(Lajikoodi lajikoodi) {
        int primaryKey = lajikoodi.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Lajikoodi)) {
            return false;
        }

        Lajikoodi lajikoodi = (Lajikoodi) obj;

        int primaryKey = lajikoodi.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Lajikoodi> toCacheModel() {
        LajikoodiCacheModel lajikoodiCacheModel = new LajikoodiCacheModel();

        lajikoodiCacheModel.lajikoodi_id = getLajikoodi_id();

        lajikoodiCacheModel.lajikoodi = getLajikoodi();

        lajikoodiCacheModel.laji = getLaji();

        String laji = lajikoodiCacheModel.laji;

        if ((laji != null) && (laji.length() == 0)) {
            lajikoodiCacheModel.laji = null;
        }

        lajikoodiCacheModel.aineistot = getAineistot();

        String aineistot = lajikoodiCacheModel.aineistot;

        if ((aineistot != null) && (aineistot.length() == 0)) {
            lajikoodiCacheModel.aineistot = null;
        }

        lajikoodiCacheModel.viite = getViite();

        String viite = lajikoodiCacheModel.viite;

        if ((viite != null) && (viite.length() == 0)) {
            lajikoodiCacheModel.viite = null;
        }

        Date tuotu_kantaan = getTuotu_kantaan();

        if (tuotu_kantaan != null) {
            lajikoodiCacheModel.tuotu_kantaan = tuotu_kantaan.getTime();
        } else {
            lajikoodiCacheModel.tuotu_kantaan = Long.MIN_VALUE;
        }

        Date muutettu = getMuutettu();

        if (muutettu != null) {
            lajikoodiCacheModel.muutettu = muutettu.getTime();
        } else {
            lajikoodiCacheModel.muutettu = Long.MIN_VALUE;
        }

        lajikoodiCacheModel.muuttaja = getMuuttaja();

        String muuttaja = lajikoodiCacheModel.muuttaja;

        if ((muuttaja != null) && (muuttaja.length() == 0)) {
            lajikoodiCacheModel.muuttaja = null;
        }

        Date poistettu = getPoistettu();

        if (poistettu != null) {
            lajikoodiCacheModel.poistettu = poistettu.getTime();
        } else {
            lajikoodiCacheModel.poistettu = Long.MIN_VALUE;
        }

        return lajikoodiCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(19);

        sb.append("{lajikoodi_id=");
        sb.append(getLajikoodi_id());
        sb.append(", lajikoodi=");
        sb.append(getLajikoodi());
        sb.append(", laji=");
        sb.append(getLaji());
        sb.append(", aineistot=");
        sb.append(getAineistot());
        sb.append(", viite=");
        sb.append(getViite());
        sb.append(", tuotu_kantaan=");
        sb.append(getTuotu_kantaan());
        sb.append(", muutettu=");
        sb.append(getMuutettu());
        sb.append(", muuttaja=");
        sb.append(getMuuttaja());
        sb.append(", poistettu=");
        sb.append(getPoistettu());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(31);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.kotus.kielikartastot.db.model.Lajikoodi");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>lajikoodi_id</column-name><column-value><![CDATA[");
        sb.append(getLajikoodi_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lajikoodi</column-name><column-value><![CDATA[");
        sb.append(getLajikoodi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>laji</column-name><column-value><![CDATA[");
        sb.append(getLaji());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>aineistot</column-name><column-value><![CDATA[");
        sb.append(getAineistot());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>viite</column-name><column-value><![CDATA[");
        sb.append(getViite());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tuotu_kantaan</column-name><column-value><![CDATA[");
        sb.append(getTuotu_kantaan());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muutettu</column-name><column-value><![CDATA[");
        sb.append(getMuutettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muuttaja</column-name><column-value><![CDATA[");
        sb.append(getMuuttaja());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>poistettu</column-name><column-value><![CDATA[");
        sb.append(getPoistettu());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
