package fi.csc.avaa.kotus.kielikartastot.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma;
import fi.csc.avaa.kotus.kielikartastot.db.model.RyhmaModel;
import fi.csc.avaa.kotus.kielikartastot.db.model.RyhmaSoap;

import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Ryhma service. Represents a row in the &quot;ryhma&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link fi.csc.avaa.kotus.kielikartastot.db.model.RyhmaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RyhmaImpl}.
 * </p>
 *
 * @author CSC
 * @see RyhmaImpl
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma
 * @see fi.csc.avaa.kotus.kielikartastot.db.model.RyhmaModel
 * @generated
 */
@JSON(strict = true)
public class RyhmaModelImpl extends BaseModelImpl<Ryhma> implements RyhmaModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a ryhma model instance should use the {@link fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma} interface instead.
     */
    public static final String TABLE_NAME = "ryhma";
    public static final Object[][] TABLE_COLUMNS = {
            { "ryhma_id", Types.INTEGER },
            { "aineisto_id", Types.INTEGER },
            { "nimi", Types.VARCHAR },
            { "tyyppi", Types.VARCHAR },
            { "ylaryhma", Types.INTEGER },
            { "selite", Types.VARCHAR },
            { "kartta_kuva_linkki", Types.VARCHAR },
            { "tuotu_kantaan", Types.TIMESTAMP },
            { "muutettu", Types.TIMESTAMP },
            { "muuttaja", Types.VARCHAR },
            { "poistettu", Types.TIMESTAMP },
            { "tmp", Types.VARCHAR },
            { "tunnus", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table ryhma (ryhma_id INTEGER not null primary key,aineisto_id INTEGER,nimi VARCHAR(75) null,tyyppi VARCHAR(75) null,ylaryhma INTEGER,selite VARCHAR(75) null,kartta_kuva_linkki VARCHAR(75) null,tuotu_kantaan DATE null,muutettu DATE null,muuttaja VARCHAR(75) null,poistettu DATE null,tmp VARCHAR(75) null,tunnus VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table ryhma";
    public static final String ORDER_BY_JPQL = " ORDER BY ryhma.ryhma_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY ryhma.ryhma_id ASC";
    public static final String DATA_SOURCE = "kotus_kielikartastot";
    public static final String SESSION_FACTORY = "kotus_kielikartastotSessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma"));
    private static ClassLoader _classLoader = Ryhma.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Ryhma.class };
    private int _ryhma_id;
    private int _aineisto_id;
    private String _nimi;
    private String _tyyppi;
    private int _ylaryhma;
    private String _selite;
    private String _kartta_kuva_linkki;
    private Date _tuotu_kantaan;
    private Date _muutettu;
    private String _muuttaja;
    private Date _poistettu;
    private String _tmp;
    private String _tunnus;
    private Ryhma _escapedModel;

    public RyhmaModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Ryhma toModel(RyhmaSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Ryhma model = new RyhmaImpl();

        model.setRyhma_id(soapModel.getRyhma_id());
        model.setAineisto_id(soapModel.getAineisto_id());
        model.setNimi(soapModel.getNimi());
        model.setTyyppi(soapModel.getTyyppi());
        model.setYlaryhma(soapModel.getYlaryhma());
        model.setSelite(soapModel.getSelite());
        model.setKartta_kuva_linkki(soapModel.getKartta_kuva_linkki());
        model.setTuotu_kantaan(soapModel.getTuotu_kantaan());
        model.setMuutettu(soapModel.getMuutettu());
        model.setMuuttaja(soapModel.getMuuttaja());
        model.setPoistettu(soapModel.getPoistettu());
        model.setTmp(soapModel.getTmp());
        model.setTunnus(soapModel.getTunnus());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Ryhma> toModels(RyhmaSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Ryhma> models = new ArrayList<Ryhma>(soapModels.length);

        for (RyhmaSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public int getPrimaryKey() {
        return _ryhma_id;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setRyhma_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _ryhma_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Ryhma.class;
    }

    @Override
    public String getModelClassName() {
        return Ryhma.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("ryhma_id", getRyhma_id());
        attributes.put("aineisto_id", getAineisto_id());
        attributes.put("nimi", getNimi());
        attributes.put("tyyppi", getTyyppi());
        attributes.put("ylaryhma", getYlaryhma());
        attributes.put("selite", getSelite());
        attributes.put("kartta_kuva_linkki", getKartta_kuva_linkki());
        attributes.put("tuotu_kantaan", getTuotu_kantaan());
        attributes.put("muutettu", getMuutettu());
        attributes.put("muuttaja", getMuuttaja());
        attributes.put("poistettu", getPoistettu());
        attributes.put("tmp", getTmp());
        attributes.put("tunnus", getTunnus());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer ryhma_id = (Integer) attributes.get("ryhma_id");

        if (ryhma_id != null) {
            setRyhma_id(ryhma_id);
        }

        Integer aineisto_id = (Integer) attributes.get("aineisto_id");

        if (aineisto_id != null) {
            setAineisto_id(aineisto_id);
        }

        String nimi = (String) attributes.get("nimi");

        if (nimi != null) {
            setNimi(nimi);
        }

        String tyyppi = (String) attributes.get("tyyppi");

        if (tyyppi != null) {
            setTyyppi(tyyppi);
        }

        Integer ylaryhma = (Integer) attributes.get("ylaryhma");

        if (ylaryhma != null) {
            setYlaryhma(ylaryhma);
        }

        String selite = (String) attributes.get("selite");

        if (selite != null) {
            setSelite(selite);
        }

        String kartta_kuva_linkki = (String) attributes.get(
                "kartta_kuva_linkki");

        if (kartta_kuva_linkki != null) {
            setKartta_kuva_linkki(kartta_kuva_linkki);
        }

        Date tuotu_kantaan = (Date) attributes.get("tuotu_kantaan");

        if (tuotu_kantaan != null) {
            setTuotu_kantaan(tuotu_kantaan);
        }

        Date muutettu = (Date) attributes.get("muutettu");

        if (muutettu != null) {
            setMuutettu(muutettu);
        }

        String muuttaja = (String) attributes.get("muuttaja");

        if (muuttaja != null) {
            setMuuttaja(muuttaja);
        }

        Date poistettu = (Date) attributes.get("poistettu");

        if (poistettu != null) {
            setPoistettu(poistettu);
        }

        String tmp = (String) attributes.get("tmp");

        if (tmp != null) {
            setTmp(tmp);
        }

        String tunnus = (String) attributes.get("tunnus");

        if (tunnus != null) {
            setTunnus(tunnus);
        }
    }

    @JSON
    @Override
    public int getRyhma_id() {
        return _ryhma_id;
    }

    @Override
    public void setRyhma_id(int ryhma_id) {
        _ryhma_id = ryhma_id;
    }

    @JSON
    @Override
    public int getAineisto_id() {
        return _aineisto_id;
    }

    @Override
    public void setAineisto_id(int aineisto_id) {
        _aineisto_id = aineisto_id;
    }

    @JSON
    @Override
    public String getNimi() {
        if (_nimi == null) {
            return StringPool.BLANK;
        } else {
            return _nimi;
        }
    }

    @Override
    public void setNimi(String nimi) {
        _nimi = nimi;
    }

    @JSON
    @Override
    public String getTyyppi() {
        if (_tyyppi == null) {
            return StringPool.BLANK;
        } else {
            return _tyyppi;
        }
    }

    @Override
    public void setTyyppi(String tyyppi) {
        _tyyppi = tyyppi;
    }

    @JSON
    @Override
    public int getYlaryhma() {
        return _ylaryhma;
    }

    @Override
    public void setYlaryhma(int ylaryhma) {
        _ylaryhma = ylaryhma;
    }

    @JSON
    @Override
    public String getSelite() {
        if (_selite == null) {
            return StringPool.BLANK;
        } else {
            return _selite;
        }
    }

    @Override
    public void setSelite(String selite) {
        _selite = selite;
    }

    @JSON
    @Override
    public String getKartta_kuva_linkki() {
        if (_kartta_kuva_linkki == null) {
            return StringPool.BLANK;
        } else {
            return _kartta_kuva_linkki;
        }
    }

    @Override
    public void setKartta_kuva_linkki(String kartta_kuva_linkki) {
        _kartta_kuva_linkki = kartta_kuva_linkki;
    }

    @JSON
    @Override
    public Date getTuotu_kantaan() {
        return _tuotu_kantaan;
    }

    @Override
    public void setTuotu_kantaan(Date tuotu_kantaan) {
        _tuotu_kantaan = tuotu_kantaan;
    }

    @JSON
    @Override
    public Date getMuutettu() {
        return _muutettu;
    }

    @Override
    public void setMuutettu(Date muutettu) {
        _muutettu = muutettu;
    }

    @JSON
    @Override
    public String getMuuttaja() {
        if (_muuttaja == null) {
            return StringPool.BLANK;
        } else {
            return _muuttaja;
        }
    }

    @Override
    public void setMuuttaja(String muuttaja) {
        _muuttaja = muuttaja;
    }

    @JSON
    @Override
    public Date getPoistettu() {
        return _poistettu;
    }

    @Override
    public void setPoistettu(Date poistettu) {
        _poistettu = poistettu;
    }

    @JSON
    @Override
    public String getTmp() {
        if (_tmp == null) {
            return StringPool.BLANK;
        } else {
            return _tmp;
        }
    }

    @Override
    public void setTmp(String tmp) {
        _tmp = tmp;
    }

    @JSON
    @Override
    public String getTunnus() {
        if (_tunnus == null) {
            return StringPool.BLANK;
        } else {
            return _tunnus;
        }
    }

    @Override
    public void setTunnus(String tunnus) {
        _tunnus = tunnus;
    }

    @Override
    public Ryhma toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Ryhma) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RyhmaImpl ryhmaImpl = new RyhmaImpl();

        ryhmaImpl.setRyhma_id(getRyhma_id());
        ryhmaImpl.setAineisto_id(getAineisto_id());
        ryhmaImpl.setNimi(getNimi());
        ryhmaImpl.setTyyppi(getTyyppi());
        ryhmaImpl.setYlaryhma(getYlaryhma());
        ryhmaImpl.setSelite(getSelite());
        ryhmaImpl.setKartta_kuva_linkki(getKartta_kuva_linkki());
        ryhmaImpl.setTuotu_kantaan(getTuotu_kantaan());
        ryhmaImpl.setMuutettu(getMuutettu());
        ryhmaImpl.setMuuttaja(getMuuttaja());
        ryhmaImpl.setPoistettu(getPoistettu());
        ryhmaImpl.setTmp(getTmp());
        ryhmaImpl.setTunnus(getTunnus());

        ryhmaImpl.resetOriginalValues();

        return ryhmaImpl;
    }

    @Override
    public int compareTo(Ryhma ryhma) {
        int primaryKey = ryhma.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Ryhma)) {
            return false;
        }

        Ryhma ryhma = (Ryhma) obj;

        int primaryKey = ryhma.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Ryhma> toCacheModel() {
        RyhmaCacheModel ryhmaCacheModel = new RyhmaCacheModel();

        ryhmaCacheModel.ryhma_id = getRyhma_id();

        ryhmaCacheModel.aineisto_id = getAineisto_id();

        ryhmaCacheModel.nimi = getNimi();

        String nimi = ryhmaCacheModel.nimi;

        if ((nimi != null) && (nimi.length() == 0)) {
            ryhmaCacheModel.nimi = null;
        }

        ryhmaCacheModel.tyyppi = getTyyppi();

        String tyyppi = ryhmaCacheModel.tyyppi;

        if ((tyyppi != null) && (tyyppi.length() == 0)) {
            ryhmaCacheModel.tyyppi = null;
        }

        ryhmaCacheModel.ylaryhma = getYlaryhma();

        ryhmaCacheModel.selite = getSelite();

        String selite = ryhmaCacheModel.selite;

        if ((selite != null) && (selite.length() == 0)) {
            ryhmaCacheModel.selite = null;
        }

        ryhmaCacheModel.kartta_kuva_linkki = getKartta_kuva_linkki();

        String kartta_kuva_linkki = ryhmaCacheModel.kartta_kuva_linkki;

        if ((kartta_kuva_linkki != null) && (kartta_kuva_linkki.length() == 0)) {
            ryhmaCacheModel.kartta_kuva_linkki = null;
        }

        Date tuotu_kantaan = getTuotu_kantaan();

        if (tuotu_kantaan != null) {
            ryhmaCacheModel.tuotu_kantaan = tuotu_kantaan.getTime();
        } else {
            ryhmaCacheModel.tuotu_kantaan = Long.MIN_VALUE;
        }

        Date muutettu = getMuutettu();

        if (muutettu != null) {
            ryhmaCacheModel.muutettu = muutettu.getTime();
        } else {
            ryhmaCacheModel.muutettu = Long.MIN_VALUE;
        }

        ryhmaCacheModel.muuttaja = getMuuttaja();

        String muuttaja = ryhmaCacheModel.muuttaja;

        if ((muuttaja != null) && (muuttaja.length() == 0)) {
            ryhmaCacheModel.muuttaja = null;
        }

        Date poistettu = getPoistettu();

        if (poistettu != null) {
            ryhmaCacheModel.poistettu = poistettu.getTime();
        } else {
            ryhmaCacheModel.poistettu = Long.MIN_VALUE;
        }

        ryhmaCacheModel.tmp = getTmp();

        String tmp = ryhmaCacheModel.tmp;

        if ((tmp != null) && (tmp.length() == 0)) {
            ryhmaCacheModel.tmp = null;
        }

        ryhmaCacheModel.tunnus = getTunnus();

        String tunnus = ryhmaCacheModel.tunnus;

        if ((tunnus != null) && (tunnus.length() == 0)) {
            ryhmaCacheModel.tunnus = null;
        }

        return ryhmaCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);

        sb.append("{ryhma_id=");
        sb.append(getRyhma_id());
        sb.append(", aineisto_id=");
        sb.append(getAineisto_id());
        sb.append(", nimi=");
        sb.append(getNimi());
        sb.append(", tyyppi=");
        sb.append(getTyyppi());
        sb.append(", ylaryhma=");
        sb.append(getYlaryhma());
        sb.append(", selite=");
        sb.append(getSelite());
        sb.append(", kartta_kuva_linkki=");
        sb.append(getKartta_kuva_linkki());
        sb.append(", tuotu_kantaan=");
        sb.append(getTuotu_kantaan());
        sb.append(", muutettu=");
        sb.append(getMuutettu());
        sb.append(", muuttaja=");
        sb.append(getMuuttaja());
        sb.append(", poistettu=");
        sb.append(getPoistettu());
        sb.append(", tmp=");
        sb.append(getTmp());
        sb.append(", tunnus=");
        sb.append(getTunnus());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(43);

        sb.append("<model><model-name>");
        sb.append("fi.csc.avaa.kotus.kielikartastot.db.model.Ryhma");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>ryhma_id</column-name><column-value><![CDATA[");
        sb.append(getRyhma_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>aineisto_id</column-name><column-value><![CDATA[");
        sb.append(getAineisto_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nimi</column-name><column-value><![CDATA[");
        sb.append(getNimi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tyyppi</column-name><column-value><![CDATA[");
        sb.append(getTyyppi());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ylaryhma</column-name><column-value><![CDATA[");
        sb.append(getYlaryhma());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>selite</column-name><column-value><![CDATA[");
        sb.append(getSelite());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>kartta_kuva_linkki</column-name><column-value><![CDATA[");
        sb.append(getKartta_kuva_linkki());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tuotu_kantaan</column-name><column-value><![CDATA[");
        sb.append(getTuotu_kantaan());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muutettu</column-name><column-value><![CDATA[");
        sb.append(getMuutettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>muuttaja</column-name><column-value><![CDATA[");
        sb.append(getMuuttaja());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>poistettu</column-name><column-value><![CDATA[");
        sb.append(getPoistettu());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tmp</column-name><column-value><![CDATA[");
        sb.append(getTmp());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tunnus</column-name><column-value><![CDATA[");
        sb.append(getTunnus());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
